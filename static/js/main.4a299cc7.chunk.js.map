{"version":3,"sources":["Pagination.js","TableComponent.js","index.js"],"names":["Pagination","_ref","searchingPhones","phones","perPage","activePage","pageClickHandler","pages","Math","ceil","length","renderPages","_loop","i","from","to","push","react_default","a","createElement","key","className","onClick","event","TableComponent","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentPhones","staticCurrentPhones","sortedBy","sortDirections","searchQuery","editInputStyle","top","left","width","height","display","editInputQuery","editCellLocation","phoneId","header","itemsPerPage","searchPhonesBufer","bind","assertThisInitialized","map","phone","objectSpread","checked","_this2","config","props","sortHeaders","keys","filter","isSortable","searchParams","URLSearchParams","window","location","search","get","maxPage","some","oneOfAllowed","set","history","pushState","concat","toString","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","setState","withCheckboxes","slice","split","direction","sortBy","searchHandler","id","updatedCurrentPhones","toConsumableArray","allChecked","target","every","arguments","paramsString","sortDownHeader","sortType","searchBufer","getRefreshedSortArrows","sort","b","localeCompare","linkQuerry","delete","searchBy","isSearchable","reg","RegExp","test","phonesBufer","dataset","cellValue","textContent","cellPosition","getBoundingClientRect","right","bottom","editQuery","which","_this$state$editCellL","rowByPhoneId","perPageValue","_this3","setArrowColor","color","type","style","position","onChange","editInputHandler","onKeyDown","submitEditHandler","itemsPerPageHandler","src_Pagination","showSelectedHandler","showAllHandler","placeholder","isAllSelected","selectAllHandler","entries","_ref2","slicedToArray","title","selectPhoneHandler","data-phone-id","data-header","onDoubleClick","editCellHandler","Component","App","columnConfig","name","age","snippet","fetch","response","json","src_TableComponent","React","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.4a299cc7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Pagination = ({\r\n                      searchingPhones,\r\n                      phones,\r\n                      perPage,\r\n                      activePage,\r\n                      pageClickHandler\r\n                    }) => {\r\n  let pages =\r\n    searchingPhones === null\r\n      ? Math.ceil(phones.length / perPage)\r\n      : Math.ceil(searchingPhones.length / perPage);\r\n  if (activePage > pages) {\r\n    activePage = pages;\r\n  } else if (activePage < 1) {\r\n    activePage = 1;\r\n  }\r\n  let renderPages = [];\r\n\r\n  for (let i = 1; i <= pages; i++) {\r\n    let from = perPage * i - perPage;\r\n    let to = perPage * i;\r\n    renderPages.push(\r\n      <span\r\n        key={i}\r\n        className={\r\n          activePage === i\r\n            ? \"TableComponent-pagination-item TableComponent-pagination-active-page\"\r\n            : \"TableComponent-pagination-item\"\r\n        }\r\n        onClick={event => pageClickHandler(from, to, i)}\r\n      >\r\n        {i}\r\n      </span>\r\n    );\r\n  }\r\n  return <div>{renderPages}</div>;\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { Component } from \"react\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nclass TableComponent extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      currentPhones: [],\r\n      staticCurrentPhones: [],\r\n      sortedBy: \"\",\r\n      sortDirections: \"\",\r\n      searchQuery: \"\",\r\n      editInputStyle: {\r\n        top: 0,\r\n        left: 0,\r\n        width: \"120px\",\r\n        height: \"50px\",\r\n        display: \"none\"\r\n      },\r\n      editInputQuery: \"\",\r\n      editCellLocation: {\r\n        phoneId: \"\",\r\n        header: \"\"\r\n      },\r\n      itemsPerPage: \"20\",\r\n      activePage: 1,\r\n      searchPhonesBufer: null\r\n    };\r\n\r\n    this.pageClickHandler = this.pageClickHandler.bind(this);\r\n  }\r\n\r\n  withCheckboxes(phones) {\r\n    return phones.map(phone => ({ ...phone, checked: false }));\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { config } = this.props;\r\n    let sortHeaders = Object.keys(config).filter(\r\n      header => config[header].isSortable\r\n    );\r\n    let sortDirections = {};\r\n    let searchParams = new URLSearchParams(window.location.search);\r\n    let itemsPerPage = searchParams.get(\"perpage\") || this.state.itemsPerPage;\r\n    let activePage = +searchParams.get(\"page\") || this.state.activePage;\r\n    let maxPage =\r\n      this.state.searchPhonesBufer === null\r\n        ? Math.ceil(this.props.phones.length / itemsPerPage)\r\n        : Math.ceil(this.state.searchPhonesBufer.length / itemsPerPage);\r\n\r\n    if (\r\n      searchParams.get(\"perpage\") &&\r\n      ![\"3\", \"5\", \"10\", \"20\"].some(\r\n        oneOfAllowed => oneOfAllowed === searchParams.get(\"perpage\")\r\n      )\r\n    ) {\r\n      searchParams.set(\"perpage\", \"20\");\r\n      itemsPerPage = \"20\";\r\n      window.history.pushState(null, null, `?${searchParams.toString()}`);\r\n    }\r\n    if (searchParams.get(\"page\")) {\r\n      if (activePage > maxPage) {\r\n        activePage = maxPage;\r\n        searchParams.set(\"page\", activePage);\r\n        window.history.pushState(null, null, `?${searchParams.toString()}`);\r\n      }\r\n      searchParams.set(\"page\", activePage);\r\n      window.history.pushState(null, null, `?${searchParams.toString()}`);\r\n    }\r\n\r\n    let from = itemsPerPage * activePage - itemsPerPage;\r\n    let to = itemsPerPage * activePage;\r\n\r\n    for (let header of sortHeaders) {\r\n      sortDirections[header] = \"↕\";\r\n    }\r\n\r\n    this.setState(\r\n      {\r\n        itemsPerPage,\r\n        activePage,\r\n        searchQuery: searchParams.get(\"query\") || \"\",\r\n        currentPhones: this.withCheckboxes(this.props.phones).slice(from, to),\r\n        staticCurrentPhones: this.withCheckboxes(this.props.phones),\r\n        sortDirections\r\n      },\r\n      () => {\r\n        if (searchParams.get(\"sortby\")) {\r\n          let header = searchParams.get(\"sortby\").split(\"_\")[0];\r\n          let direction = searchParams.get(\"sortby\").split(\"_\")[1];\r\n          let isSortable = this.props.config[header].isSortable;\r\n          this.sortBy(isSortable, header, direction);\r\n        }\r\n\r\n        searchParams.get(\"query\") &&\r\n        this.searchHandler(null, searchParams.get(\"query\"));\r\n      }\r\n    );\r\n  }\r\n\r\n  selectPhoneHandler(id) {\r\n    let updatedCurrentPhones = [...this.state.currentPhones];\r\n    updatedCurrentPhones = updatedCurrentPhones.map(phone => {\r\n      if (phone.id === id) {\r\n        return {\r\n          ...phone,\r\n          checked: !phone.checked\r\n        };\r\n      }\r\n      return phone;\r\n    });\r\n\r\n    this.setState({ currentPhones: updatedCurrentPhones });\r\n  }\r\n\r\n  selectAllHandler(event) {\r\n    let allChecked = event.target.checked;\r\n    let updatedCurrentPhones = [...this.state.currentPhones];\r\n    updatedCurrentPhones = updatedCurrentPhones.map(phone => {\r\n      return { ...phone, checked: allChecked };\r\n    });\r\n\r\n    this.setState({ currentPhones: updatedCurrentPhones });\r\n  }\r\n\r\n  isAllSelected() {\r\n    return this.state.currentPhones.every(phone => phone.checked);\r\n  }\r\n\r\n  sortBy(isSortable = false, header, direction = \"down\") {\r\n    if (!isSortable) {\r\n      return;\r\n    }\r\n\r\n    let paramsString = window.location.search;\r\n    let searchParams = new URLSearchParams(paramsString);\r\n    let sortDownHeader = \"\";\r\n    if (direction === \"up\") {\r\n      sortDownHeader = header;\r\n    }\r\n    let sortType = typeof this.state.currentPhones[0][header];\r\n    let updatedCurrentPhones = [...this.state.staticCurrentPhones];\r\n    let searchBufer =\r\n      this.state.searchPhonesBufer !== null\r\n        ? [...this.state.searchPhonesBufer]\r\n        : null;\r\n    let sortDirections = this.getRefreshedSortArrows();\r\n\r\n    if (header === sortDownHeader || this.state.sortedBy) {\r\n      if (sortType === \"string\") {\r\n        updatedCurrentPhones.sort((a, b) => b[header].localeCompare(a[header]));\r\n        searchBufer !== null &&\r\n        searchBufer.sort((a, b) => b[header].localeCompare(a[header]));\r\n      } else if (sortType === \"number\") {\r\n        updatedCurrentPhones.sort((a, b) => b[header] - a[header]);\r\n        searchBufer !== null &&\r\n        searchBufer.sort((a, b) => b[header] - a[header]);\r\n      }\r\n      sortDirections[header] = \"↑\";\r\n      searchParams.set(\"sortby\", `${header}_up`);\r\n      window.history.pushState(null, null, `?${searchParams.toString()}`);\r\n\r\n      this.setState({\r\n        currentPhones:\r\n          searchBufer === null\r\n            ? updatedCurrentPhones.slice(0, this.state.itemsPerPage)\r\n            : searchBufer.slice(0, this.state.itemsPerPage),\r\n        staticCurrentPhones: updatedCurrentPhones,\r\n        searchPhonesBufer: searchBufer,\r\n        sortedBy: \"\",\r\n        activePage: 1,\r\n        sortDirections\r\n      });\r\n    } else {\r\n      if (sortType === \"string\") {\r\n        updatedCurrentPhones.sort((a, b) => a[header].localeCompare(b[header]));\r\n        searchBufer !== null &&\r\n        searchBufer.sort((a, b) => a[header].localeCompare(b[header]));\r\n      } else if (sortType === \"number\") {\r\n        updatedCurrentPhones.sort((a, b) => a[header] - b[header]);\r\n        searchBufer !== null &&\r\n        searchBufer.sort((a, b) => a[header] - b[header]);\r\n      }\r\n      sortDirections[header] = \"↓\";\r\n      searchParams.set(\"sortby\", `${header}_down`);\r\n      window.history.pushState(null, null, `?${searchParams.toString()}`);\r\n\r\n      this.setState({\r\n        currentPhones:\r\n          searchBufer === null\r\n            ? updatedCurrentPhones.slice(0, this.state.itemsPerPage)\r\n            : searchBufer.slice(0, this.state.itemsPerPage),\r\n        staticCurrentPhones: updatedCurrentPhones,\r\n        searchPhonesBufer: searchBufer,\r\n        sortedBy: header,\r\n        activePage: 1,\r\n        sortDirections\r\n      });\r\n    }\r\n  }\r\n\r\n  searchHandler(event, linkQuerry = null) {\r\n    let { config } = this.props;\r\n    let value = linkQuerry || event.target.value;\r\n\r\n    let paramsString = window.location.search;\r\n    let searchParams = new URLSearchParams(paramsString);\r\n    value === \"\"\r\n      ? searchParams.delete(\"query\")\r\n      : searchParams.set(\"query\", `${value}`);\r\n    searchParams.set(\"page\", \"1\");\r\n    window.history.pushState(null, null, `?${searchParams.toString()}`);\r\n\r\n    let updatedCurrentPhones = [...this.state.staticCurrentPhones];\r\n    let searchBy = Object.keys(config).filter(\r\n      header => config[header].isSearchable\r\n    );\r\n    let reg = new RegExp(value, \"i\");\r\n\r\n    updatedCurrentPhones = updatedCurrentPhones.filter(phone =>\r\n      searchBy.some(header => reg.test(phone[header]))\r\n    );\r\n\r\n    this.setState({\r\n      searchQuery: value,\r\n      currentPhones: updatedCurrentPhones.slice(0, this.state.itemsPerPage),\r\n      searchPhonesBufer: value === \"\" ? null : updatedCurrentPhones,\r\n      activePage: 1\r\n    });\r\n  }\r\n\r\n  showSelectedHandler() {\r\n    let updatedCurrentPhones = [...this.state.currentPhones];\r\n    updatedCurrentPhones = updatedCurrentPhones.filter(phone => phone.checked);\r\n\r\n    if (updatedCurrentPhones.length === 0) {\r\n      return;\r\n    }\r\n\r\n    this.setState({ currentPhones: updatedCurrentPhones });\r\n  }\r\n\r\n  showAllHandler() {\r\n    let from =\r\n      this.state.activePage * this.state.itemsPerPage - this.state.itemsPerPage;\r\n    let to = this.state.activePage * this.state.itemsPerPage;\r\n\r\n    let phonesBufer =\r\n      this.state.searchPhonesBufer === null\r\n        ? [...this.state.staticCurrentPhones]\r\n        : [...this.state.searchPhonesBufer];\r\n\r\n    this.setState({\r\n      currentPhones: phonesBufer.slice(from, to)\r\n    });\r\n  }\r\n\r\n  editCellHandler(event) {\r\n    let phoneId = event.target.dataset.phoneId;\r\n    let header = event.target.dataset.header;\r\n    let cellValue = event.target.textContent;\r\n    let cellPosition = event.target.getBoundingClientRect();\r\n\r\n    this.setState({\r\n      editInputStyle: {\r\n        display: \"block\",\r\n        top: cellPosition.top,\r\n        left: cellPosition.left,\r\n        width: cellPosition.right - cellPosition.left - 3,\r\n        height: cellPosition.bottom - cellPosition.top - 5\r\n      },\r\n      editCellLocation: {\r\n        phoneId,\r\n        header\r\n      },\r\n      editInputQuery: cellValue\r\n    });\r\n  }\r\n\r\n  editInputHandler(event) {\r\n    let editQuery = event.target.value;\r\n    this.setState({ editInputQuery: editQuery });\r\n  }\r\n\r\n  submitEditHandler(event) {\r\n    if (event.which !== 13) {\r\n      return;\r\n    }\r\n\r\n    let { phoneId: rowByPhoneId, header } = this.state.editCellLocation;\r\n    let { editInputQuery: editQuery } = this.state;\r\n    let updatedCurrentPhones = [...this.state.currentPhones];\r\n\r\n    updatedCurrentPhones = updatedCurrentPhones.map(phone => {\r\n      if (phone.id === rowByPhoneId) {\r\n        phone[header] = editQuery;\r\n      }\r\n      return phone;\r\n    });\r\n\r\n    this.setState({\r\n      currentPhones: updatedCurrentPhones,\r\n      editInputStyle: {\r\n        top: 0,\r\n        left: 0,\r\n        width: \"120px\",\r\n        height: \"50px\",\r\n        display: \"none\"\r\n      },\r\n      editInputQuery: \"\",\r\n      editCellLocation: {\r\n        phoneId: \"\",\r\n        header: \"\"\r\n      }\r\n    });\r\n  }\r\n\r\n  itemsPerPageHandler(event, perPageFromSearch = null) {\r\n    let perPageValue = perPageFromSearch || event.target.value;\r\n\r\n    let paramsString = window.location.search;\r\n    let searchParams = new URLSearchParams(paramsString);\r\n    searchParams.set(\"perpage\", `${perPageValue}`);\r\n    window.history.pushState(null, null, `?${searchParams.toString()}`);\r\n\r\n    let phonesBufer =\r\n      this.state.searchPhonesBufer === null\r\n        ? [...this.state.staticCurrentPhones]\r\n        : [...this.state.searchPhonesBufer];\r\n\r\n    this.setState({\r\n      itemsPerPage: perPageValue,\r\n      currentPhones: phonesBufer.slice(0, perPageValue),\r\n      activePage: 1\r\n    });\r\n  }\r\n\r\n  pageClickHandler(from, to, activePage) {\r\n    let paramsString = window.location.search;\r\n    let searchParams = new URLSearchParams(paramsString);\r\n    searchParams.set(\"page\", `${activePage}`);\r\n    window.history.pushState(null, null, `?${searchParams.toString()}`);\r\n\r\n    let phonesBufer =\r\n      this.state.searchPhonesBufer === null\r\n        ? [...this.state.staticCurrentPhones]\r\n        : [...this.state.searchPhonesBufer];\r\n\r\n    this.setState({\r\n      currentPhones: phonesBufer.slice(from, to),\r\n      activePage\r\n    });\r\n  }\r\n\r\n  getRefreshedSortArrows() {\r\n    let sortDirections = { ...this.state.sortDirections };\r\n    for (let header in sortDirections) {\r\n      sortDirections[header] = \"↕\";\r\n    }\r\n    return sortDirections;\r\n  }\r\n\r\n  render() {\r\n    let setArrowColor = header => {\r\n      if (this.state.sortDirections[header] === \"↕\") {\r\n        return { color: \"blue\" };\r\n      } else if (this.state.sortDirections[header] === \"↓\") {\r\n        return { color: \"green\" };\r\n      } else if (this.state.sortDirections[header] === \"↑\") {\r\n        return { color: \"red\" };\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"TableComponent-container\">\r\n        <input\r\n          type=\"text\"\r\n          style={{\r\n            display: this.state.editInputStyle.display,\r\n            position: \"absolute\",\r\n            top: this.state.editInputStyle.top,\r\n            left: this.state.editInputStyle.left,\r\n            width: this.state.editInputStyle.width,\r\n            height: this.state.editInputStyle.height\r\n          }}\r\n          value={this.state.editInputQuery}\r\n          onChange={event => this.editInputHandler(event)}\r\n          onKeyDown={event => this.submitEditHandler(event)}\r\n        />\r\n\r\n        <div className=\"TableComponent-pagination-container\">\r\n          <select\r\n            value={this.state.itemsPerPage}\r\n            onChange={event => this.itemsPerPageHandler(event)}\r\n            className=\"TableComponent-items-per-page\"\r\n          >\r\n            <option value=\"3\">3</option>\r\n            <option value=\"5\">5</option>\r\n            <option value=\"10\">10</option>\r\n            <option value=\"20\">20</option>\r\n          </select>\r\n\r\n          <Pagination\r\n            perPage={this.state.itemsPerPage}\r\n            searchingPhones={this.state.searchPhonesBufer}\r\n            phones={this.state.staticCurrentPhones}\r\n            activePage={this.state.activePage}\r\n            pageClickHandler={this.pageClickHandler}\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          className=\"TableComponent-show-btn\"\r\n          onClick={() => this.showSelectedHandler()}\r\n        >\r\n          Show selected\r\n        </button>\r\n        <button\r\n          className=\"TableComponent-show-btn\"\r\n          onClick={() => this.showAllHandler()}\r\n        >\r\n          Show all\r\n        </button>\r\n        <input\r\n          type=\"text\"\r\n          className=\"TableComponent-search-input\"\r\n          placeholder=\" Type to search ...\"\r\n          value={this.state.searchQuery}\r\n          onChange={event => this.searchHandler(event)}\r\n        />\r\n        <table className=\"TableComponent-table\">\r\n          <thead>\r\n          <tr>\r\n            <th>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={this.isAllSelected()}\r\n                onChange={event => this.selectAllHandler(event)}\r\n              />\r\n            </th>\r\n            {Object.entries(this.props.config).map(([header, props]) => (\r\n              <th\r\n                className={\r\n                  props.isSortable\r\n                    ? \"TableComponent-table-sortable-header\"\r\n                    : null\r\n                }\r\n                key={header}\r\n                onClick={() => this.sortBy(props.isSortable, header)}\r\n              >\r\n                {props.title}{\" \"}\r\n                {props.isSortable && (\r\n                  <span style={setArrowColor(header)}>\r\n                      {this.state.sortDirections[header]}\r\n                    </span>\r\n                )}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          {this.state.currentPhones.map(phone => (\r\n            <tr key={phone.id}>\r\n              <td>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={phone.checked}\r\n                  onChange={() => this.selectPhoneHandler(phone.id)}\r\n                />\r\n              </td>\r\n              {Object.keys(this.props.config).map(header => (\r\n                <td\r\n                  key={header}\r\n                  data-phone-id={phone.id}\r\n                  data-header={header}\r\n                  onDoubleClick={event => {\r\n                    this.editCellHandler(event);\r\n                  }}\r\n                >\r\n                  {phone[header]}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"TableComponent-pagination-bot-container\">\r\n          <Pagination\r\n            perPage={this.state.itemsPerPage}\r\n            searchingPhones={this.state.searchPhonesBufer}\r\n            phones={this.state.staticCurrentPhones}\r\n            activePage={this.state.activePage}\r\n            pageClickHandler={this.pageClickHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableComponent;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TableComponent from \"./TableComponent\";\n\nimport \"./styles.css\";\nclass App extends React.Component {\n  state = {\n    phones: [],\n    columnConfig: {\n      name: {\n        title: \"Название\", // так будет называться колонка в таблице\n        isSortable: true,\n        isSearchable: true // Поиск будет проверять эту и последнюю колонки\n      },\n      age: {\n        title: \"Возраст\",\n        isSortable: true // по этой колонке можно сортировать\n      },\n      snippet: {\n        // Только для тех ключей которые есть в columnConfig будут колонки в таблице\n        title: \"Описание\",\n        isSearchable: true // В этой колонке тоже будет происходить поиск query\n      }\n    }\n  };\n\n  async componentDidMount() {\n    let response = await fetch(\n      \"https://raw.githubusercontent.com/vladikcoder/phones-app/master/phones/phones.json\"\n    );\n    let phones = await response.json();\n\n    this.setState({ phones });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Data table</h1>\n\n        {this.state.phones.length > 0 ? (\n          <TableComponent\n            phones={this.state.phones}\n            config={this.state.columnConfig}\n          />\n        ) : (\n          \"loading...\"\n        )}\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}